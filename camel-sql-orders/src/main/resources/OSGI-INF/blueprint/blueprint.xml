<?xml version="1.0" encoding="UTF-8"?>
<blueprint
        xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">

    <bean id="orderBean" class="org.apache.servicemix.examples.camel.sql.OrderBean" init-method="init"/>

    <reference id="dataSource" interface="javax.sql.DataSource" filter="(datasource.name=orders)">
        <reference-listener bind-method="onBind" unbind-method="onUnbind">
            <bean class="org.apache.servicemix.examples.camel.sql.ListenerBean"/>
        </reference-listener>
    </reference>

    <bean id="sql" class="org.apache.camel.component.sql.SqlComponent">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <camelContext xmlns="http://camel.apache.org/schema/blueprint">
        <propertyPlaceholder id="placeholder" location="classpath:sql.properties"/>
        <route id="generateOrder-route">
            <from uri="direct-vm:insertOrder"/>
            <to uri="sql:{{sql.insertOrder}}"/>
            <log message="Inserted a new order of ${body}"/>
        </route>

        <!-- route that process the orders by picking up new rows from the database
      and when done processing then update the row to mark it as processed -->
        <route id="processOrder-route">
            <from uri="sql:{{sql.selectOrder}}?consumer.onConsume={{sql.markOrder}}"/>
            <to uri="bean:orderBean?method=processOrder"/>
            <log message="${body}"/>
        </route>
    </camelContext>

</blueprint>